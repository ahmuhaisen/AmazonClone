// <auto-generated />
using AmazonClone.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmazonClone.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240620153908_AddProductsTblWithARelationshipWithCategories")]
    partial class AddProductsTblWithARelationshipWithCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AmazonClone.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("HasSize")
                        .HasColumnType("bit");

                    b.Property<string>("IconString")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasSize = false,
                            IconString = "fa-solid fa-tv",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            HasSize = true,
                            IconString = "fas fa-tshirt",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            HasSize = false,
                            IconString = "bi bi-book",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 4,
                            HasSize = false,
                            IconString = "bi bi-house",
                            Name = "Home & Kitchen"
                        },
                        new
                        {
                            Id = 5,
                            HasSize = false,
                            IconString = "fa-solid fa-futbol",
                            Name = "Sports & Outdoors"
                        });
                });

            modelBuilder.Entity("AmazonClone.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Samsung Galaxy S23 5G Smartphone, 128GB, Phantom Black",
                            DiscountPercentage = 10.0,
                            ImageUrl = "https://image.samsung.com/au/smartphones/galaxy-s23/buy/s23_pc.png",
                            Name = "Samsung Galaxy S23",
                            Price = 799.99000000000001
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Men's Levi's 501 Original Fit Jeans, Medium Stonewash",
                            DiscountPercentage = 20.0,
                            ImageUrl = "https://cdn.levis.com.au/media/catalog/product/cache/bf9c1236dce8d5003d3a5e90e1989ff1/0/0/005010114-standard-f.jpg",
                            Name = "Levi's 501 Original Jeans",
                            Price = 59.990000000000002
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Atomic Habits: An Easy & Proven Way to Build Good Habits & Break Bad Ones by James Clear",
                            DiscountPercentage = 15.0,
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/91bYsX41DVL.jpg",
                            Name = "Atomic Habits",
                            Price = 11.99
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Instant Pot Duo 7-in-1 Electric Pressure Cooker, 6 Quart, Stainless Steel",
                            DiscountPercentage = 5.0,
                            ImageUrl = "https://m.media-amazon.com/images/I/61aTYtlfuyL._AC_SL1500_.jpg",
                            Name = "Instant Pot Duo 7-in-1",
                            Price = 89.989999999999995
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Nike Men's Air Zoom Pegasus 39 Running Shoes, White/Black",
                            DiscountPercentage = 12.0,
                            ImageUrl = "https://images.nike.com/is/image/DotCom/CW7358_100?$SNKRS_COVER_WD$&align=0,1",
                            Name = "Nike Air Zoom Pegasus 39",
                            Price = 119.98999999999999
                        });
                });

            modelBuilder.Entity("AmazonClone.Domain.Entities.Product", b =>
                {
                    b.HasOne("AmazonClone.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AmazonClone.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
