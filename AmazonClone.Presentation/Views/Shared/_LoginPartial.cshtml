@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item mx-2">
            <a id="manage" class="nav-link text-white mt-1" asp-area="Master" asp-controller="User" asp-action="Details" title="@UserManager.GetUserName(User)">
                @if(UserManager.GetUserAsync(User).Result.ProfilePictureUrl is not null)
                {
                    <img class="avatar grow rounded-circle" alt="profile" src="@UserManager.GetUserAsync(User).Result.ProfilePictureUrl" />
                }
                else
                {
                    <img class="avatar grow rounded-circle" src="~/images/user-placeholder.png" />
                }
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "Master" })">
                <button id="logout" type="submit" class="grow nav-link btn btn-link text-white" title="Logout">
                    <i class="bi bi-box-arrow-right nav-icon"></i>
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
